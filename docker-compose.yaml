version: "3.9"
services:
  app:
    build: .
    ports:
      - "${PORT}:${PORT}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NUM_THREADS=${DB_NUM_THREADS}
      - DB_MIN_CONNECTIONS=${DB_MIN_CONNECTIONS}
      - DB_MAX_CONNECTIONS=${DB_MAX_CONNECTIONS}
      - DB_QUEUE_SIZE=${DB_QUEUE_SIZE}
      - HOST=${HOST}
      - PORT=${PORT}
      - HARD_TERMINATION_DEADLINE_DURATION_SECONDS=${HARD_TERMINATION_DEADLINE_DURATION_SECONDS}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_SECONDS_TO_EXPIRE=${JWT_SECONDS_TO_EXPIRE}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      db:
        condition:
          service_healthy
  db:
    image: postgres:14.4-alpine
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5